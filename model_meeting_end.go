/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libattio

import (
	"encoding/json"
	"fmt"
)


// MeetingEnd struct for MeetingEnd
type MeetingEnd struct {
	MeetingEndAnyOf *MeetingEndAnyOf
	MeetingEndAnyOf1 *MeetingEndAnyOf1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *MeetingEnd) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into MeetingEndAnyOf
	err = json.Unmarshal(data, &dst.MeetingEndAnyOf);
	if err == nil {
		jsonMeetingEndAnyOf, _ := json.Marshal(dst.MeetingEndAnyOf)
		if string(jsonMeetingEndAnyOf) == "{}" { // empty struct
			dst.MeetingEndAnyOf = nil
		} else {
			return nil // data stored in dst.MeetingEndAnyOf, return on the first match
		}
	} else {
		dst.MeetingEndAnyOf = nil
	}

	// try to unmarshal JSON data into MeetingEndAnyOf1
	err = json.Unmarshal(data, &dst.MeetingEndAnyOf1);
	if err == nil {
		jsonMeetingEndAnyOf1, _ := json.Marshal(dst.MeetingEndAnyOf1)
		if string(jsonMeetingEndAnyOf1) == "{}" { // empty struct
			dst.MeetingEndAnyOf1 = nil
		} else {
			return nil // data stored in dst.MeetingEndAnyOf1, return on the first match
		}
	} else {
		dst.MeetingEndAnyOf1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(MeetingEnd)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MeetingEnd) MarshalJSON() ([]byte, error) {
	if src.MeetingEndAnyOf != nil {
		return json.Marshal(&src.MeetingEndAnyOf)
	}

	if src.MeetingEndAnyOf1 != nil {
		return json.Marshal(&src.MeetingEndAnyOf1)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableMeetingEnd struct {
	value *MeetingEnd
	isSet bool
}

func (v NullableMeetingEnd) Get() *MeetingEnd {
	return v.value
}

func (v *NullableMeetingEnd) Set(val *MeetingEnd) {
	v.value = val
	v.isSet = true
}

func (v NullableMeetingEnd) IsSet() bool {
	return v.isSet
}

func (v *NullableMeetingEnd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeetingEnd(val *MeetingEnd) *NullableMeetingEnd {
	return &NullableMeetingEnd{value: val, isSet: true}
}

func (v NullableMeetingEnd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeetingEnd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


