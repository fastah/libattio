/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/fastah/libattio

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NoteTagsInnerOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NoteTagsInnerOneOf{}

// NoteTagsInnerOneOf struct for NoteTagsInnerOneOf
type NoteTagsInnerOneOf struct {
	// The type of entity tagged in the note. Can be either 'workspace-member' or 'record'
	Type string `json:"type"`
	// The ID of the workspace member that is tagged in the note.
	WorkspaceMemberId string `json:"workspace_member_id"`
}

type _NoteTagsInnerOneOf NoteTagsInnerOneOf

// NewNoteTagsInnerOneOf instantiates a new NoteTagsInnerOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoteTagsInnerOneOf(type_ string, workspaceMemberId string) *NoteTagsInnerOneOf {
	this := NoteTagsInnerOneOf{}
	this.Type = type_
	this.WorkspaceMemberId = workspaceMemberId
	return &this
}

// NewNoteTagsInnerOneOfWithDefaults instantiates a new NoteTagsInnerOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoteTagsInnerOneOfWithDefaults() *NoteTagsInnerOneOf {
	this := NoteTagsInnerOneOf{}
	return &this
}

// GetType returns the Type field value
func (o *NoteTagsInnerOneOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NoteTagsInnerOneOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NoteTagsInnerOneOf) SetType(v string) {
	o.Type = v
}


// GetWorkspaceMemberId returns the WorkspaceMemberId field value
func (o *NoteTagsInnerOneOf) GetWorkspaceMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceMemberId
}

// GetWorkspaceMemberIdOk returns a tuple with the WorkspaceMemberId field value
// and a boolean to check if the value has been set.
func (o *NoteTagsInnerOneOf) GetWorkspaceMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceMemberId, true
}

// SetWorkspaceMemberId sets field value
func (o *NoteTagsInnerOneOf) SetWorkspaceMemberId(v string) {
	o.WorkspaceMemberId = v
}


func (o NoteTagsInnerOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NoteTagsInnerOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["workspace_member_id"] = o.WorkspaceMemberId
	return toSerialize, nil
}

func (o *NoteTagsInnerOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"workspace_member_id",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{} {
	}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == ""{
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil{
			return err
		}
	}
	varNoteTagsInnerOneOf := _NoteTagsInnerOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNoteTagsInnerOneOf)

	if err != nil {
		return err
	}

	*o = NoteTagsInnerOneOf(varNoteTagsInnerOneOf)

	return err
}

type NullableNoteTagsInnerOneOf struct {
	value *NoteTagsInnerOneOf
	isSet bool
}

func (v NullableNoteTagsInnerOneOf) Get() *NoteTagsInnerOneOf {
	return v.value
}

func (v *NullableNoteTagsInnerOneOf) Set(val *NoteTagsInnerOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNoteTagsInnerOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNoteTagsInnerOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoteTagsInnerOneOf(val *NoteTagsInnerOneOf) *NullableNoteTagsInnerOneOf {
	return &NullableNoteTagsInnerOneOf{value: val, isSet: true}
}

func (v NullableNoteTagsInnerOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoteTagsInnerOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


