/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libattio

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MeetingParticipantsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeetingParticipantsInner{}

// MeetingParticipantsInner struct for MeetingParticipantsInner
type MeetingParticipantsInner struct {
	// The status of the individual meeting participant.
	Status string `json:"status"`
	// Whether or not the participant is the organizer of the meeting.
	IsOrganizer bool `json:"is_organizer"`
	// The normalized email address of the meeting participant.
	EmailAddress NullableString `json:"email_address"`
}

type _MeetingParticipantsInner MeetingParticipantsInner

// NewMeetingParticipantsInner instantiates a new MeetingParticipantsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeetingParticipantsInner(status string, isOrganizer bool, emailAddress NullableString) *MeetingParticipantsInner {
	this := MeetingParticipantsInner{}
	this.Status = status
	this.IsOrganizer = isOrganizer
	this.EmailAddress = emailAddress
	return &this
}

// NewMeetingParticipantsInnerWithDefaults instantiates a new MeetingParticipantsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeetingParticipantsInnerWithDefaults() *MeetingParticipantsInner {
	this := MeetingParticipantsInner{}
	return &this
}

// GetStatus returns the Status field value
func (o *MeetingParticipantsInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MeetingParticipantsInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MeetingParticipantsInner) SetStatus(v string) {
	o.Status = v
}


// GetIsOrganizer returns the IsOrganizer field value
func (o *MeetingParticipantsInner) GetIsOrganizer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOrganizer
}

// GetIsOrganizerOk returns a tuple with the IsOrganizer field value
// and a boolean to check if the value has been set.
func (o *MeetingParticipantsInner) GetIsOrganizerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOrganizer, true
}

// SetIsOrganizer sets field value
func (o *MeetingParticipantsInner) SetIsOrganizer(v bool) {
	o.IsOrganizer = v
}


// GetEmailAddress returns the EmailAddress field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MeetingParticipantsInner) GetEmailAddress() string {
	if o == nil || o.EmailAddress.Get() == nil {
		var ret string
		return ret
	}

	return *o.EmailAddress.Get()
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeetingParticipantsInner) GetEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailAddress.Get(), o.EmailAddress.IsSet()
}

// SetEmailAddress sets field value
func (o *MeetingParticipantsInner) SetEmailAddress(v string) {
	o.EmailAddress.Set(&v)
}


func (o MeetingParticipantsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MeetingParticipantsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["is_organizer"] = o.IsOrganizer
	toSerialize["email_address"] = o.EmailAddress.Get()
	return toSerialize, nil
}

func (o *MeetingParticipantsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"is_organizer",
		"email_address",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{} {
	}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == ""{
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil{
			return err
		}
	}
	varMeetingParticipantsInner := _MeetingParticipantsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMeetingParticipantsInner)

	if err != nil {
		return err
	}

	*o = MeetingParticipantsInner(varMeetingParticipantsInner)

	return err
}

type NullableMeetingParticipantsInner struct {
	value *MeetingParticipantsInner
	isSet bool
}

func (v NullableMeetingParticipantsInner) Get() *MeetingParticipantsInner {
	return v.value
}

func (v *NullableMeetingParticipantsInner) Set(val *MeetingParticipantsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMeetingParticipantsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMeetingParticipantsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeetingParticipantsInner(val *MeetingParticipantsInner) *NullableMeetingParticipantsInner {
	return &NullableMeetingParticipantsInner{value: val, isSet: true}
}

func (v NullableMeetingParticipantsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeetingParticipantsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


