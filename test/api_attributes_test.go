/*
Attio API

Testing AttributesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package libattio

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	libattio "github.com/fastah/libattio"
)

func Test_libattio_AttributesAPIService(t *testing.T) {

	configuration := libattio.NewConfiguration()
	apiClient := libattio.NewAPIClient(configuration)

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeGet(context.Background(), target, identifier, attribute).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeOptionsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeOptionsGet(context.Background(), target, identifier, attribute).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeOptionsOptionPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string
		var option string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeOptionsOptionPatch(context.Background(), target, identifier, attribute, option).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeOptionsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeOptionsPost(context.Background(), target, identifier, attribute).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributePatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributePatch(context.Background(), target, identifier, attribute).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeStatusesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeStatusesGet(context.Background(), target, identifier, attribute).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeStatusesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeStatusesPost(context.Background(), target, identifier, attribute).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesAttributeStatusesStatusPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string
		var attribute string
		var status string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesAttributeStatusesStatusPatch(context.Background(), target, identifier, attribute, status).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesGet(context.Background(), target, identifier).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttributesAPIService V2TargetIdentifierAttributesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var target string
		var identifier string

		resp, httpRes, err := apiClient.AttributesAPI.V2TargetIdentifierAttributesPost(context.Background(), target, identifier).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
